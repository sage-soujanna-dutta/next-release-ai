name: Deploy to Production

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy'
        required: true
        type: string

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Run tests
      run: |
        if npm test --if-present; then
          echo "✅ Tests passed"
        else
          echo "⚠️ No tests found"
        fi
      
    - name: Create release package
      run: |
        mkdir -p release-package
        cp -r dist/ release-package/
        cp package.json release-package/
        cp README.md release-package/
        cp -r scripts/ release-package/ 2>/dev/null || echo "No scripts directory"
        
    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-package-${{ github.ref_name || github.event.inputs.version }}
        path: release-package/
        retention-days: 90

  create-github-release:
    needs: build-and-publish
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: release-package-${{ github.ref_name }}
        path: release-package/
        
    - name: Create ZIP file
      run: |
        cd release-package
        zip -r ../release-mcp-server-${{ github.ref_name }}.zip .
        cd ..
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release-mcp-server-${{ github.ref_name }}.zip
        generate_release_notes: true
        draft: false
        prerelease: ${{ contains(github.ref_name, '-') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
